#include "test.h"
#include "h264/h264.h"
#include "h264/H264LayerSelector.h"

class H264Plan: public TestPlan
{
public:
	H264Plan() : TestPlan("H264 test plan")
	{
		
	}
	
	virtual void Execute()
	{
		testSelector();
	}
	
	void testSelector()
	{
		BYTE data[1074] = {56,1,225,33,224,74,2,80,
			115,132,191,193,7,36,254,54,
			227,41,20,69,194,33,43,22,
			219,79,213,124,243,238,66,105,
			71,218,63,8,79,137,194,32,
			248,183,8,152,232,6,47,3,
			193,89,43,40,83,104,254,223,
			92,102,221,3,219,85,178,202,
			26,39,238,6,225,57,248,140,
			231,196,41,6,228,176,39,150,
			85,181,197,53,255,191,218,78,
			121,149,10,125,100,172,14,78,
			169,232,135,42,205,165,93,200,
			222,224,18,3,230,128,0,152,
			19,252,245,92,201,17,79,163,
			29,246,130,20,69,227,23,82,
			158,237,150,49,206,18,140,182,
			159,240,55,145,199,31,119,4,
			22,237,167,130,132,162,168,37,
			242,4,249,109,211,12,63,234,
			13,174,121,103,236,70,146,219,
			255,197,214,146,177,168,170,87,
			1,67,44,93,185,228,78,75,
			61,63,169,5,80,139,18,23,
			248,11,249,111,77,119,110,107,
			46,170,229,126,12,201,66,53,
			65,248,115,46,62,16,192,193,
			4,12,75,80,192,89,206,50,
			86,1,77,165,207,158,92,127,
			195,10,103,114,25,200,5,105,
			112,15,228,99,240,26,76,80,
			125,251,133,25,98,128,191,65,
			127,230,253,133,16,67,95,96,
			156,16,169,66,109,177,52,140,
			83,203,206,53,186,46,201,149,
			152,147,130,56,110,195,196,149,
			148,192,248,98,149,22,82,172,
			18,64,242,239,105,34,16,106,
			88,40,109,20,30,240,109,0,
			54,216,123,45,37,86,81,13,
			12,150,36,99,148,83,131,98,
			80,194,217,144,132,96,18,214,
			214,134,196,99,230,102,83,86,
			221,83,165,72,36,53,226,202,
			255,55,245,205,239,116,240,51,
			38,79,156,16,5,250,109,52,
			140,195,108,194,215,245,195,193,
			58,180,186,135,59,1,149,164,
			69,239,31,251,125,46,89,80,
			33,86,11,155,63,140,187,206,
			99,32,111,158,71,136,90,211,
			117,255,63,196,16,108,13,25,
			6,144,23,34,69,204,193,98,
			137,228,223,10,148,2,164,68,
			67,176,98,134,120,42,250,166,
			58,228,77,244,246,235,4,166,
			85,250,142,45,188,102,127,113,
			188,75,149,127,190,45,213,121,
			10,249,39,20,252,89,45,62,
			19,114,160,103,117,251,0,166,
			6,178,25,152,2,76,33,0,
			120,56,18,128,148,28,225,47,
			243,224,52,240,232,30,106,1,
			142,24,20,68,0,2,108,133,
			250,217,180,92,250,132,207,36,
			192,71,136,105,73,57,38,138,
			219,245,172,93,55,191,17,100,
			172,198,174,94,202,232,44,25,
			102,215,222,255,230,21,144,15,
			24,93,244,23,242,11,26,95,
			61,92,30,191,68,166,54,149,
			114,255,137,184,61,103,103,134,
			160,196,254,31,150,68,50,0,
			9,75,31,211,36,198,209,227,
			168,22,42,175,2,24,102,218,
			252,120,119,9,216,64,233,220,
			133,148,106,60,153,118,207,53,
			152,89,130,126,143,136,135,72,
			42,175,126,151,223,96,21,42,
			180,82,134,227,17,217,72,200,
			171,57,227,84,237,151,2,21,
			86,237,196,23,66,125,234,237,
			248,238,66,44,232,16,96,55,
			109,108,92,135,159,174,32,212,
			32,28,42,247,99,123,139,148,
			214,81,195,230,182,11,127,157,
			179,246,196,92,45,166,27,87,
			200,29,243,251,140,138,219,237,
			69,61,94,63,233,220,131,158,
			129,91,252,75,108,23,56,253,
			190,187,169,38,240,134,146,121,
			137,209,10,245,162,194,186,52,
			28,82,207,49,75,48,41,63,
			108,32,54,15,105,141,52,53,
			130,167,52,36,214,182,65,191,
			179,183,171,220,137,101,239,142,
			96,156,240,10,224,81,253,128,
			240,18,69,130,253,192,97,11,
			81,103,137,211,38,124,75,192,
			64,1,75,62,143,122,34,141,
			215,116,116,120,143,104,79,46,
			215,210,139,6,157,152,175,206,
			82,123,251,61,85,96,92,191,
			59,61,233,108,146,41,28,19,
			186,208,228,13,96,6,216,20,
			2,130,131,147,189,27,158,46,
			190,149,170,250,13,217,192,73,
			26,222,188,205,227,23,243,137,
			212,232,160,72,97,146,162,81,
			43,72,114,192,108,214,175,67,
			223,95,159,238,116,48,169,38,
			56,91,232,36,56,141,243,49,
			58,51,156,228,27,138,128,138,
			64,232,170,5,124,13,224,43,
			163,36,133,183,234,16,188,234,
			193,132,121,81,230,84,119,234,
			221,71,159,249,143,60,174,185,
			152,17,32,110,72,181,54,204,
			248,74,103,19,64,215,125,185,
			224,208,69,214,28,245,211,90,
			95,2,113,188,145,139,113,188,
			142,133,64,137,214,72,75,52,
			72,81,140,229,162,171,95,185,
			145,74,230,79,26,51,248,175,
			132,59,40,9,109,135,147,108,
			37,211,122,68,137,209,147,200,
			148,102,63,153,67,44,91,131,
			222,180,40,231,235,109,17,186,
			254,238,109,100,140,151,157,24,
			94,246,159,177,49,102,247,44,
			91,177,14,140,140,227,186,233,
			207,250,40,2,45,183,66,61,
			149,187,8,249,69,83,250,254,
			72,199,51,181,237,163,77,57,
			89,128};
		
		H264LayerSelector selector;
		RTPPacket::shared rtp = std::make_shared<RTPPacket>(MediaFrame::Video,VideoCodec::H264);
		rtp->SetPayload((BYTE*)data,sizeof(data));
		
		bool mark = false;
		selector.Select(rtp,mark);
		
		selector.GetSeqParameterSet().Dump();
		selector.GetPictureParameterSet().Dump();
	}
};

	
H264Plan h264;

